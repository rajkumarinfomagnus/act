name: Create Repository
description: Creates a repository within an organization using the gh CLI.

inputs:
  USER_PAT:
    description: 'Enter the Personal Access Token'
    required: true
  ORG_NAME:
    description: 'Enter organization name'
    required: true
  REPO_NAME:
    description: 'Enter name of repository'
    required: true    
  DESCRIPTION:
    description: 'Enter the Description'
    required: true
  HOST_NAME:
    description: 'Enter the hostname'
    required: true 
  HOMEPAGE:
    description: 'Enter the homepage'
    default: 'https://im-kp-es379.eastus.cloudapp.azure.com'
  PRIVATE:
    description: 'Provide whether repository is private or not'
    default: 'true'
  HAS_ISSUES:
    description: 'Provide whether repository can have issues or not'
    default: 'true'
  HAS_PROJECTS:
    description: 'Provide whether repository can have projects or not'
    default: 'true'
  HAS_WIKI:
    description: 'Provide whether repository can have wiki or not'
    default: 'true'
  HAS_DISCUSSIONS:
    description: 'Provide whether repository can have discussions or not'
    default: 'true'

runs:
  using: composite
  steps:

      - name: Creating repository
        run: |
          
          # check if organization exists
            response=$(curl -s -H "Authorization: token ${{ inputs.USER_PAT }}" -H "Accept: application/vnd.github.v3+json" "https://${{ inputs.HOST_NAME }}/api/v3/orgs/${{ inputs.ORG_NAME }}")
            org_exists=$(echo "$response" | jq -r '.login')

            if [[ "$org_exists" == "null" ]]; then
              echo "Organization doesn't exist."
              exit 1  # Exit with an error code
            else
              echo "Organization exists."

              # check if repository exists in the organization or not
              repo_exists_response=$(curl -s -H "Authorization: token ${{ inputs.USER_PAT }}" -H "Accept: application/vnd.github.v3+json" "https://${{ inputs.HOST_NAME }}/api/v3/repos/${{ inputs.ORG_NAME }}/${{ inputs.REPO_NAME }}")
              repo_exists=$(echo "$repo_exists_response" | jq -r '.name')

              if [ "$repo_exists" != "null" ]; then              
                echo "Repository already exists"
                exit 1            
              else
                echo "Repository does not exist"

                # create the repository
                  gh api \
                    --method POST \
                    -H "Accept: application/vnd.github+json" \
                    -H "X-GitHub-Api-Version: 2022-11-28" \
                    --hostname "${{ inputs.HOST_NAME }}" \
                    "/orgs/${{ inputs.ORG_NAME }}/repos" \
                    -f "name=${{ inputs.REPO_NAME }}" \
                    -f "description=${{ inputs.DESCRIPTION }}" \
                    -f "homepage=${{ inputs.HOMEPAGE }}" \
                    -F "private=${{ inputs.PRIVATE }}" \
                    -F "has_issues=${{ inputs.HAS_ISSUES }}" \
                    -F "has_projects=${{ inputs.HAS_PROJECTS }}" \
                    -F "has_wiki=${{ inputs.HAS_WIKI }}" \
                    -F "has_discussions=${{ inputs.HAS_DISCUSSIONS }}"
              fi  
          fi
        shell: bash  
