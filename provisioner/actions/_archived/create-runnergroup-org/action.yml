name: Create Runner Group at ORG
description: Creates a runner group at the Organization level using the GitHub API.

inputs:
  GROUP_NAME:
    description: 'Enter Runner group name'
    required: true
  ORG_NAME:
    description: 'Enter name of ORG'
    required: true
  TOKEN:
    description: 'Enter TOKEN user'
    required: true
  HOSTNAME:
    description: 'Enter the hostname'
    required: true
 
runs:
  using: composite
  steps:
    - name: Create runner groups at organization
      run: |
        response=$(curl -L \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ inputs.TOKEN }}" \
          "https://${{ inputs.HOSTNAME }}/api/v3/orgs/${{ inputs.ORG_NAME }}/actions/runner-groups")
        echo "Response: $response"
        
        # Check if response contains "Not Found"
        if [[ "$response" == *"Not Found"* ]]; then
          echo "Runner group does not exist. Creating..."
          curl -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ inputs.TOKEN }}" \
          https://${{ inputs.HOSTNAME }}/api/v3/orgs/${{ inputs.ORG_NAME }}/actions/runner-groups \
          -d '{"name":"${{ inputs.GROUP_NAME }}","visibility":"selected"}'
        else
          group_exists=$(echo "$response" | jq -r '.runner_groups[] | select(.name == "${{ inputs.GROUP_NAME }}") | .name')

          echo "group_exists: $group_exists"
          
          if [ -z "$group_exists" ]; then
            echo "Runner group does not exist. Creating..."
            curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ inputs.TOKEN }}" \
            https://${{ inputs.HOSTNAME }}/api/v3/orgs/${{ inputs.ORG_NAME }}/actions/runner-groups \
            -d '{"name":"${{ inputs.GROUP_NAME }}","visibility":"selected"}'
          else
            echo "Runner group already exists."
            exit 1
          fi
        fi
      shell: bash   
