name: Add Label to Repo
description: Add Label to repository
inputs:
  USER_PAT:
    description: 'Enter the Personal Access Token'
    required: true
  ORG_NAME:
    description: 'Organization name'
    required: true  
  REPO_NAME:
    description: 'Repository name'
    required: true   
  LABEL_NAME:
    description: 'Label name'
    required: true
  LABEL_COLOR:
    description: 'Label color'
    default: 'd7d3f4'
  LABEL_DESCRIPTION:
    description: 'Label description'
    default: 'This label is generated by github actions'   
  
outputs:
  LABEL_RESPONSE:
    description: 'Response from GitHub API'
    value: ${{ steps.assign-label-to-repo.response }}
runs:
  using: composite
  steps:
    - name: Check if label exists      
      id: check-label
      env:
        GITHUB_TOKEN: ${{ inputs.USER_PAT }}
      run: |
        label_exists=$(gh api /repos/${{ inputs.ORG_NAME }}/${{ inputs.REPO_NAME }}/labels | jq -r '.[] | select(.name=="${{ inputs.LABEL_NAME }}") | .name')
        if [[ -n "$label_exists" ]]; then
          echo "label_exists=true" >> $GITHUB_OUTPUT
        else
          echo "label_exists=false" >> $GITHUB_OUTPUT
        fi
      shell: bash

    - name: Create label
      env:
        GITHUB_TOKEN: ${{ inputs.USER_PAT }}
      run: |
        if [[ "${{ steps.check-label.outputs.label_exists }}" == "false" ]]; then
          response=$(gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ inputs.ORG_NAME }}/${{ inputs.REPO_NAME }}/labels \
            -f name='${{ inputs.LABEL_NAME }}' \
            -f description='${{ inputs.LABEL_DESCRIPTION }}' \
            -f color='${{ inputs.LABEL_COLOR }}')
           echo "response=$response" >> $GITHUB_OUTPUT
        fi      
      shell: bash
